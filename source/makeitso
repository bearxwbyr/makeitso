#!/usr/bin/php
<?php
/* makeitso
 *
 * The MIT License
 * 
 * Copyright (c) 2010, Gary McGhee, Buzzware Solutions <contact@buzzware.com.au>.
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *
 */
 
	// configure the default timezone
	date_default_timezone_set('Australia/Perth');

	set_include_path( get_include_path().PATH_SEPARATOR.dirname(__FILE__) );	// adds local dir to include path
	require_once 'MakeItHowBase.php';

	function printBanner() {
		MakeItSo::log()->info('');
		MakeItSo::log()->info("================ M a k e I t S o ================\n\n  Launched ".dateTimeString()."\n");
	}

	function printUsage() {
		/*
		print "Usage: makeitso <task> <arguments and options>\n";
		print "<task> defaults to main";
		print "\noptions are prefixed with -- eg. --someSwitch=on\n";
		print "arguments are given values seperated by a space\n";
		print "\n";
		print "Reserved options are :\n";
		print "  --how=<PHP file of class descending from MakeItHowBase (defaults to MakeItHow.php in the current working directory)>\n";
		print "  --what=<xml file of config values (defaults to MakeItWhat.xml in the current working directory)>\n";
		print "\n";
		*/
	}

	function printFooter() {
		MakeItSo::log()->info("\n  Completed ".dateTimeString()."\n==================================================\n\n");
	}

	$originalWorkingPath = null;

	// commandline examples :
	// makeitso --verbose go --howFile=makeithow.php
	// makeitso go
	// makeitso build racetrack
	//
	// So pattern is :
	//
	// makeitso <task> <arguments and options>
	function makeitso_exception_handler($e) {
		global $originalWorkingPath;
		MakeItSo::log()->info('');
		MakeItSo::log()->info('!  !  !  !  !  !  !  !  !  !  !  !  !  !  !');
		MakeItSo::log()->err(standardExceptionHandler($e));
		if (is_a($e,'CustomException')) {
			$code = $e->getCode();
			if ($code===0)
				$code = 1;
		} else {
			$code = 1;
		}
		if ($originalWorkingPath)
			chdir($originalWorkingPath);
		exit((integer) $code);
	}
	set_exception_handler('makeitso_exception_handler');

	function makeitso_error_handler($errno, $errstr, $errfile, $errline) {
		global $originalWorkingPath;
    if (!(error_reporting() & $errno)) {
        // This error code is not included in error_reporting
        return;
    }
		MakeItSo::log()->info('');
		MakeItSo::log()->info('!  !  !  !  !  !  !  !  !  !  !  !  !  !  !');
		MakeItSo::log()->err(errorReport($errno, $errstr, $errfile, $errline));

    //if ($errno===E_USER_ERROR) {
			MakeItSo::log()->info("Aborting...\n");
			if ($originalWorkingPath)
				chdir($originalWorkingPath);
			exit(1);
		//}

    /* Don't execute PHP internal error handler */
    return true;
	}
	set_error_handler('makeitso_error_handler');

	$originalWorkingPath = getcwd();
	printBanner();
	$pars = Console_Getargs_Combined::getArgs();
	$howFilename = 'MakeItHow.php';
	if (isset($pars['how'])) {
		$howFilename = $pars['how'];
	} else if (empty($pars)) {
		echo 'no parameters specified!' . PHP_EOL;
	} else if (endsWith($pars[1],'.php',false)) {
		$howFilename = $pars[1];
	}
	
	if (file_exists(realpath($howFilename))) {		// assuming $howFilename exists, will change dir to its directory before running tasks
		$howPath = dirname(realpath($howFilename));
		chdir($howPath);
		$how = MakeItHowBase::loadClass(basename($howFilename),MakeItSo::log());
	$how->configureWhat($pars);
		$how->afterConfig();
	$how->callDefaultTask();
		printFooter();
		if ($originalWorkingPath)
			chdir($originalWorkingPath);
	} else {
		if ($logger)
			$logger->err("Error! How file ".$howFilename." from ".getcwd()." doesn't exist");
		else
			print("Error! How file ".$howFilename." from ".getcwd()." doesn't exist\n");
		exit(1);
	}

?>
